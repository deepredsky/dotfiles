require("config.lazy")

require("config.keymaps").init()

vim.cmd 'colorscheme everforest'
--
-- map("n", "<leader>f", [[<cmd>Files<cr>]])
-- map("n", "<leader>F", [[<cmd>lua require('telescope.builtin').find_files( { cwd = vim.fn.expand('%:p:h') })<cr>]])
-- map("n", "<leader>b", [[<cmd>Buffers<cr>]])
-- map("n", "<leader>.", [[<cmd>BTags<cr>]])
--
-- map("n", "<Space><Space>", "<Plug>(qf_qf_toggle)")
-- map("n", "<C-n>", "<Plug>(qf_qf_next)")
-- map("n", "<C-p>", "<Plug>(qf_qf_previous)")
-- vim.api.nvim_set_keymap('n', 'Y', 'y$', { noremap = true })
-- vim.api.nvim_set_keymap('v', '<leader>c', '"+y', { noremap = true })
-- vim.api.nvim_set_keymap('n', '<leader>p', ':r!pbpaste<CR>', { noremap = true })
-- vim.api.nvim_set_keymap('n', 'j', 'gj', { noremap = true })
-- vim.api.nvim_set_keymap('n', 'k', 'gk', { noremap = true })
-- vim.api.nvim_set_keymap('n', 'cd', ':lcd %:h<CR>', { noremap = true })
-- vim.api.nvim_set_keymap('n', '<leader><leader>', ':', { noremap = true })
-- vim.api.nvim_set_keymap('n', '<leader>w', ':update<CR>', { noremap = true })
-- vim.api.nvim_set_keymap('v', '<leader>c', '"+y', { noremap = true })
-- vim.api.nvim_set_keymap('n', '<leader>p', ':r!pbpaste<CR>', { noremap = true })
--
-- -- Copy to system clipboard
-- vim.api.nvim_set_keymap('v', '<leader>c', '"+y', { noremap = true })
-- -- Paste from system clipboard
-- vim.api.nvim_set_keymap('n', '<leader>p', ':r!pbpaste<CR>', { noremap = true })
--
-- -- Move up and down by display line
-- vim.api.nvim_set_keymap('n', 'j', 'gj', { noremap = true })
-- vim.api.nvim_set_keymap('n', 'k', 'gk', { noremap = true })
--
-- -- Map <Leader><Leader> to command-line mode
-- vim.api.nvim_set_keymap('n', '<Leader><Leader>', ':', { noremap = true })
-- -- Save file with <Leader>w
-- vim.api.nvim_set_keymap('n', '<Leader>w', ':w<CR>', { noremap = true })
--
-- -- Do not use <Ctrl-c> to break out to normal mode
-- -- Use C-Space to Esc out of any mode
-- vim.api.nvim_set_keymap('n', '<C-Space>', '<Esc>:noh<CR>', { noremap = true })
-- vim.api.nvim_set_keymap('v', '<C-Space>', '<Esc>gV', { noremap = true })
-- vim.api.nvim_set_keymap('o', '<C-Space>', '<Esc>', { noremap = true })
-- vim.api.nvim_set_keymap('c', '<C-Space>', '<C-c>', { noremap = true })
-- vim.api.nvim_set_keymap('i', '<C-Space>', '<Esc>`^', { noremap = true })
-- -- Terminal sees <C-@> as <C-space>
-- vim.api.nvim_set_keymap('n', '<C-@>', '<Esc>:noh<CR>', { noremap = true })
-- vim.api.nvim_set_keymap('v', '<C-@>', '<Esc>gV', { noremap = true })
-- vim.api.nvim_set_keymap('o', '<C-@>', '<Esc>', { noremap = true })
-- vim.api.nvim_set_keymap('c', '<C-@>', '<C-c>', { noremap = true })
-- vim.api.nvim_set_keymap('i', '<C-@>', '<Esc>`^', { noremap = true })
--
-- -- Grep word under cursor
-- vim.api.nvim_set_keymap('n', 'K', ':grep! "\\b<C-R><C-W>\\b"<CR>:cw<CR>', { noremap = true })
-- vim.api.nvim_set_keymap('v', 'K', '"ay:Ag "<C-r>a"<CR>', { noremap = true })
--
-- -- Create the directory containing the file in the buffer
-- vim.api.nvim_set_keymap('n', '<leader>md', ':!mkdir -p %:p:h<CR>', { silent = true })
--
-- -- Edit new file in the same directory as the current file
-- vim.api.nvim_set_keymap('n', '<leader>ew', ':e <C-R>=expand("%:h").\'/\'<CR>', { silent = true })
--
-- -- Open FZF's tag selector
-- vim.api.nvim_set_keymap('n', '<leader>.', ':BTags<CR>', { noremap = true })
--
-- vim.api.nvim_set_keymap('n', '<leader>gj', ':Jump diff head<CR>', { noremap = true, silent = true })
-- vim.api.nvim_set_keymap('n', '<leader>gJ', ':Jump diff head^<CR>', { noremap = true, silent = true })
--
-- -- Command definition
-- vim.api.nvim_create_user_command('Jump', function(opts)
--   vim.cmd('cexpr system(\'git jump ' .. table.concat(opts.fargs, ' ') .. '\')')
-- end, { nargs = '*' })
-- -- Configure LSP through rust-tools.nvim plugin.
-- -- rust-tools will configure and enable certain LSP features for us.
-- -- See https://github.com/simrat39/rust-tools.nvim#configuration
-- local opts = {
--   tools = {
--     runnables = {
--       use_telescope = true,
--     },
--     inlay_hints = {
--       auto = true,
--       show_parameter_hints = false,
--       parameter_hints_prefix = "",
--       other_hints_prefix = "",
--     },
--   },
-- }
