#!/usr/bin/env ruby

require 'json'
require 'http'
require 'pp'

cmd = ARGV[0]
username = ARGV[1]

def clone
  url = "https://api.github.com/users/#{username}/repos?per_page=200"
  repos.each { |repo| %x[git clone #{repo["ssh_url"]} ]}
end

def update
  repos
    .select {|repo| repo["fork"] }
    .each do |repo|
    name = repo['name']
    url = repo['url']
    p repo["fork"]

    source = HTTP
      .basic_auth(user: username, pass: ENV["GITHUB_PR_TOKEN"])
      .get(url).parse

    source_ssh_url = source.dig('source','ssh_url') || source.dig('parent','ssh_url')
    if source_ssh_url
      unless system("cd #{name} && git remote | grep upstream")
        p "Setting upstream to #{source_ssh_url}"
        system("cd #{name} && git remote add upstream #{source_ssh_url}")
      else
        p "upstream already set"
      end
    else
      p "Skipping #{name}: Source & parent has no ssh url"
      pp source
      exit
    end
  end
end

def repos
  @repos ||= HTTP
    .basic_auth(user: 'deepredsky', pass: ENV["GITHUB_PR_TOKEN"])
    .get(url).parse
end

case cmd
when "create"
  create
when "update"
  update
else
  p "USAGE: repo_cloner [create|update] username"
end
