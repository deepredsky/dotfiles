#!/usr/bin/env ruby

require 'json'
require 'http'
require 'pp'

def repos(username)
  url = "https://api.github.com/users/#{username}/repos?per_page=300"

  puts url
  response = HTTP
             .basic_auth(user: username, pass: ENV['GITHUB_PR_TOKEN'])
             .get(url)

  unless response.status.ok?
    puts "Error accessing github api. Status: #{response.status}"
    exit
  end

  response.parse
end

username = ARGV[0]

if !username || username.empty?
  puts "Username is required"
  exit
end

repos(username)
  .each do |repo|
    name = repo['name']
    url = repo['url']

    source = HTTP
             .basic_auth(user: username, pass: ENV['GITHUB_PR_TOKEN'])
             .get(url).parse

    source_ssh_url = source.dig('ssh_url')
    parent_ssh_url = source.dig('parent', 'ssh_url')

    if source_ssh_url
      puts "processing #{name}"
      if File.directory?(name)
        if source["fork"]
          puts "Setting upstream to #{parent_ssh_url}"
          if system("cd #{name} && git remote | grep upstream")
            puts 'upstream already set'
          else
            system("cd #{name} && git remote add upstream #{parent_ssh_url}")
          end
        end
      else
        puts "cloning repo #{source_ssh_url}"
        system("git clone #{source_ssh_url}")

        if source["fork"]
          puts "Setting upstream to #{parent_ssh_url}"

          if parent_ssh_url
            system("cd #{name} && git remote add upstream #{parent_ssh_url}")
          end
        end
      end
    else
      puts "Skipping #{name}: Source has no ssh url"
    end
  end
